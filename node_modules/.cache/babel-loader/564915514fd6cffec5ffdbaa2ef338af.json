{"ast":null,"code":"var _jsxFileName = \"/home/axis/Development/the-amazing-world-of-shell/src/components/organisms/shell/Shell.jsx\";\nimport React from 'react';\nimport { Content } from '../../molecules';\nimport { StickyFooter } from '../../molecules';\nimport { TitleImg } from '../../molecules';\nimport { Sheet } from '../../molecules';\nexport const Shell = () => {\n  const imgUrl = require('../../../assets/images/rainbow.png');\n\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"WhatIShell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"What is shell?\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"A shell is a command-line interpreter which exposes access to an operating system's services.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"In general, operating system shells use either a command-line interface (CLI)\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"or graphical user interface (GUI), depending on a computer's role and particular operation.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"It is named a shell because it is the outermost layer around the operating system.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"If you connect to a security camera (wink, wink) you can be almost certain that the outermost layer is a CLI shell,\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"a shell that is probably a bourne shell\"), React.createElement(\"h2\", {\n    id: \"Bourne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Bourne Shell\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Developed by Stephen Bourne, father of Jason (David) Bourne (Webb).\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"A Bourne shell is the mostly spread and used CLI shell to this day, and is featured on almost\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"every embedded unix based machine for example a security camera (wink, wink)\"), React.createElement(\"h2\", {\n    id: \"Putty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Putty\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Putty is a software used by windows users to access a shell at a unix based machine.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"So when someone puttys to a unix based machine a shell is opened.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"(on a security camera a bourne shell wink, wink)\"), React.createElement(\"h2\", {\n    id: \"ShellCmd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Shell commands\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"As the shell we enbark our journey with is mainly Bourne shell (CLI)\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"We will not have any fancy graphical icons or fancy applications that displays pictures and so forth,\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"we will have to use our imagination which, still can be fun...\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Commands\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"From here and a bit down south a couple of useful shell commands will be listed and described.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"The description will have a windows translator so that any windows user that reads this\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"still can follow our journey and use once imagination to visualise what is happening.\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"cd <path>\"), \" changes the directory you are currently exploring to the given <path> \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \"(same as clicking a folder icon in windows) \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"ls\"), \" lists all files in the directory you are currently exploring \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"(same as a window pop up in windows that shows you all the fancy icons)\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"cat <file>\"), \" displays the content of the given <file> \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \"(same as clicking e.g a txt file in windows)\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"mkdir <name>\"), \" creates a directory with the given <name> in the directory you are currently exploring\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"(self explanatory)\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"pwd\"), \" displays the current directory you are exploring (incase you got lost)\")), React.createElement(\"h2\", {\n    id: \"GSTH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Good Stuff To Have (GSTH)\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \".\"), \" . is the current directory you are exploring e.g \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \"cd . means change direcotory to where I am right now (kind of useless) \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"..\"), \" .. is the directory one level above the directory you are currently exploring e.g \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \"cd .. means climb to the direcory above\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" <something> > <file>\"), \" put whatever <something> returns into \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \"<file> e.g echo \\\"Unicorn\\\" > rainbow.txt \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"takes what echo \\\"Unicorn\\\" returns which is Unicorn and \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"puts that in the file rainbow.txt. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \"rainbow.txt does not exist? Do not worry good old shell will create it for you\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" <something> >> <file>\"), \" appends whatever <something> returns at the end of <file> e.g \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), \"echo \\\"Unicorn\\\" >> rainbow.txt \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), \"takes what echo \\\"Unicorn\\\" returns which is Unicorn and appends that at the end of the file rainbow.txt. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), \"rainbow.txt does not exist? Do not worry good old shell will create it for you\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\u2764 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"<something> | <something_else>\"), \" takes whatever <something> returns \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \"and uses that as an argument to <something_else>\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), \"(Do not fear what you do not know... \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), \"we will get to what: \", React.createElement(\"a\", {\n    href: \"ArgZ\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"arguments\")), \" are in a bit be patient)\")), React.createElement(\"h2\", {\n    id: \"Scriptz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Scribes gonna script\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"So now I hope we have juorneyed through what shell is and what putty does. Next step is to create some\"), React.createElement(TitleImg, {\n    imgPath: imgUrl,\n    alt: \"cool picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764MAGIC\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\\u2764\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"By creating some scripts that a shell (a Bourne shell) can run on its own.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"But before we do that is suggest you take a trip to the amazing world of Vi/m\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"or if you allready have been to the amazing world of Vi/m lets continue.\"), React.createElement(\"h3\", {\n    id: \"CSript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Creating a script\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Now open up your (Vi/m) new favorite text editor, either on your own computer or through a shell via putty\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"e.g on a security camera (wink, wink).\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"The first row of this newly created file should be #!/bin/sh\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"this line tells the shell that is running your script which shell it should run it in...\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Confusing? Well yes of course it is!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"A unix based operative system that runs on a device e.g a security camera (wink again ;)),\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"can have multiple differnet shells installed.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"By writing #!/bin/sh we say use what ever shell used as standard e.g a Bourne shell\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"now save the file and make sure the file extension is .sh e.i save the file as e.g myScript.sh\"), React.createElement(\"h3\", {\n    id: \"RunScript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Running a script\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"when the script is created we must make sure it can be executed on the machine we intend to use it on.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"This is done by in a shell executing the following command:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"sudo chmod 775 <script_name>.sh\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"One should note that the command sudo is not allways needed and that chmod 775 is overkill.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Now to execute the script simply type ./<script_name>.sh\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"The script created above will do nothing as it is empty but do not cry because:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Next we will go through the following things:\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#CScript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\u2764 Creating a script\")), React.createElement(\"a\", {\n    href: \"#RunScript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"\\u2764 Running a script\")), React.createElement(\"a\", {\n    href: \"#ArgzPass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"\\u2764 Passing arguments\")), React.createElement(\"a\", {\n    href: \"#Exitscript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\u2764 Exiting a script\")), React.createElement(\"a\", {\n    href: \"#SimpleCmdzz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u2764 Simple commands\")), React.createElement(\"a\", {\n    href: \"#Commentz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"\\u2764 Comments\")), React.createElement(\"a\", {\n    href: \"#Vbalz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"\\u2764 Variables\")), React.createElement(\"a\", {\n    href: \"#Argz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"\\u2764 Arguments\")), React.createElement(\"a\", {\n    href: \"#Funcz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\u2764 Functions\")), React.createElement(\"a\", {\n    href: \"#Cstatez\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\u2764 Conditional statements\")), React.createElement(\"a\", {\n    href: \"#Loopz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\u2764 Loopy loops\"))), React.createElement(\"h3\", {\n    id: \"ArgzPass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Passing arguments\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"When executing a command or a script one can give the command/script one or more presents\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"in different forms and shapes.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"This is called passing arguments to the command/script.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Arguments are passed in the following way <some_command> <argument_1> <...> <argument_n>\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"As you can see you allready done this when you tested out the command cat <some_file>\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"here <some_file> is an argument to cat\"), React.createElement(\"h3\", {\n    id: \"Exitscript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Exiting a script\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"To stop and exit a running command/script press crtl+c in your shell.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Note this will kill your script and not in a nice way.\"), React.createElement(\"h3\", {\n    id: \"SimpleCmdzz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Simple commands\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"After the first row one can write any shell command one feels necessary e.g a small script might look as follow:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, `\n                #!/bin/sh\n                cat file_1.txt >> loggy.log\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"When someone runs this script the script will cat (print) what is in file_1.txt and\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"append what is printed at the end of the file loggy.log\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"So one can just keep adding lines with differnet commands to the script file and when the script is executed\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"the commands will be executed in the order they are written\"), React.createElement(\"h3\", {\n    id: \"Commentz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"All lines beginning with a # (except the first one) is a comment and will not be executed.\"), React.createElement(\"h3\", {\n    id: \"Vbalz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Variables\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"One can create what is called variables, these kind little helpers is simply names that have a given value.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"E.g i want to use the value 0x420 many times but i do not want to write 0x420 all the time and\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"0x420 is not self explainatory but if I create a variable with a explainatory name e.g as SMOKERSDAY=0x420\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"one will directly know when you see $SMOKERSDAY that the value is 0x420.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Note that when creating the variable no $ dollar bill yall is used. but when \\\"calling\\\" the variable\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"It is full CREAM with $SMOKERSDAY in this way the shell can know if it is suppose to create or use a variable.\"), React.createElement(\"h3\", {\n    id: \"Argz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Arguments\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"In order to take care of any arguments in your script you can access them via the \\\"variables\\\" $0 ... $n\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Where $0 is a special one, this is the name of the command that is executed.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"$1 and so forth are the arguments in order given to the script at execution.\"), React.createElement(\"h3\", {\n    id: \"Funcz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Functions\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Let us create som functions or commands within the script it self.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"To create a function you will have to write the following in your script file:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, `\n                some_function_name(){\n                    #function contet goes here\n                }\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"The above function just has a comment and does not for now do anything.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"To use this function in your script just call its name like so:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, `\n                some_function_name\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"to call it with arguments:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, `\n                some_function_name <arg1> <arg2> <...> <argN>\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Note that function work just as a script within the script it self as mentioned above.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"That means that taking care of arguments work the same with full CREAM with $0 $1 and so forth\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"creating and calling variables and calling other functions/commands e.g cat ls some_other_function_created\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Here is an example to gaze upon:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, `\n                #!/bin/sh\n                #Name of this script is test.sh\n                SMOKERSDAY=0x420\n                funny_func(){\n                    echo $1\n                }\n                call_on_me() {\n                    funny_func $1\n                }\n                call_on_me $SMOKERSDAY\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"What does ./test.sh do?\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Well it prints 0x420 in the shell it is executed in.\"), React.createElement(\"h3\", {\n    id: \"CStatez\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Conditional statements\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Lets lay down some conditions.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"What is a conditional statement?\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Well basically it is a question or a statement in the form of if.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"If this is true do this else if this is true do that else do what ever.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"For example:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, `\n                if [ 1 -gt 0 ]\n                then\n                  echo YES\n                fi\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"The above statement does the following:\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Checks if 1 is greater than (-gt) 0 then echo YES\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Another one:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, `\n                if [ $1 -gt 2 ]\n                then\n                  echo YES\n                else if [ $1 -le 4 ]\n                    echo \"Oooh YEAS\"\n                fi\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"The example above does the following:\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Checks if the first argument ($1) is greater than (-gt) 2 if it is then echo YES if not:\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Checks if the first argument ($1) is less than (-lt) 4 if it is then echo \\\"Oooh YEAS\\\" \")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"And in the spirit of DJ Khaled And another one:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, `\n                if [ $1 -gt 2 ]\n                then\n                  echo YES\n                else if [ $1 -le 4 ]\n                    echo \"Oooh YEAS\"\n                else\n                    echo \"Hell YEAH!\"\n                fi\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"The example above does the following:\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Checks if the first argument ($1) is greater than (-gt) 2 if it is then echo YES if not:\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Checks if the first argument ($1) is less than (-lt) 4 if it is then echo Oooh YEAS \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"If non of the above echo Hell YEAH!\")), React.createElement(\"h3\", {\n    id: \"Loopz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Loopy loops\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Lets gaze opon a special kind of conditional statement, that does the same thing a couple of times\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"or for infinity.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"This is loops.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"An loop is exactly what its name implies.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"There are 2 kinds of loops one is called \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"for\"), \" and one is called \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"while\"), \".\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"The \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"for\"), \" loop is a special kind of while and can look like this:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, `\n                for i in 1 2 3 4 5\n                do\n                    echo \"Looping ... number $i\"\n                done\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"i\"), \" can be replaced with any name you like but \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"i,j,k\"), \" is the most commonly used.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"i\"), \" is called a loop index.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"1 2 3 4 5\"), \" can be replaced with any other compatible set.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Beween \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"do\"), \" and \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"done\"), \" you specify what is to be done in a loop,\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"in the example above just echo some text.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Now lets look on \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"while\"), \" for a while...\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"A while loop can look like this:\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, `\n                INPUT_STRING=hello\n                while [ \"$INPUT_STRING\" != \"bye\" ]\n                do\n                    echo \"Please type something in (bye to quit)\"\n                    read INPUT_STRING\n                    echo \"You typed: $INPUT_STRING\"\n                done\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Do not fear!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"I know it looks advanced and scary, but the main thing here is that the loop goes on until:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"The condition [ \\\"$INPUT_STRING\\\" != \\\"bye\\\" ] is true, e.i $INPUT_STRING is equal to bye then\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"the loop quits looping.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"So [ \\\"$INPUT_STRING\\\" != \\\"bye\\\" ] can be switched out to any condition e.g [ 1 ] which will make\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"the while loop go on for ever until crtl+c is pressed.\"), React.createElement(\"h2\", {\n    id: \"CheatSheets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, \"Cheat sheets\"), React.createElement(Sheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, `\n                cd <path>     change directory to <path>\n                cat <file>    print content of <file>\n                ls            show which files are in the current directory\n                >> <file>     append to\n                >  <file>     write to\n            `), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"Well thats all for now GLHF!\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  })), React.createElement(StickyFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#WhatIShell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"What is shell?\")), React.createElement(\"a\", {\n    href: \"#Bourne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Bourne\")), React.createElement(\"a\", {\n    href: \"#Putty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Putty\")), React.createElement(\"a\", {\n    href: \"#ShellCmd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Shell commands\")), React.createElement(\"a\", {\n    href: \"#Scriptz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Scribes gonna script\")), React.createElement(\"a\", {\n    href: \"#GSTH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Good Stuff To Have (GSTH)\")), React.createElement(\"a\", {\n    href: \"#CheatSheets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"Cheat sheets\"))));\n};","map":{"version":3,"sources":["/home/axis/Development/the-amazing-world-of-shell/src/components/organisms/shell/Shell.jsx"],"names":["React","Content","StickyFooter","TitleImg","Sheet","Shell","imgUrl","require"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Content } from '../../molecules';\nimport { StickyFooter } from '../../molecules';\nimport { TitleImg } from '../../molecules';\nimport { Sheet } from '../../molecules';\n\nexport const Shell = () => {\n    const imgUrl = require('../../../assets/images/rainbow.png');\n    return (\n        <Content>\n            <h2 id=\"WhatIShell\">What is shell?</h2>\n            <p>A shell is a command-line interpreter which exposes access to an operating system's services.</p> \n            <p>In general, operating system shells use either a command-line interface (CLI)</p>\n            <p>or graphical user interface (GUI), depending on a computer's role and particular operation.</p> \n            <p>It is named a shell because it is the outermost layer around the operating system.</p>\n            <p>If you connect to a security camera (wink, wink) you can be almost certain that the outermost layer is a CLI shell,</p>\n            <p>a shell that is probably a bourne shell</p>\n            <h2 id=\"Bourne\">Bourne Shell</h2>\n            <p>Developed by Stephen Bourne, father of Jason (David) Bourne (Webb).</p>\n            <p>A Bourne shell is the mostly spread and used CLI shell to this day, and is featured on almost</p>\n            <p>every embedded unix based machine for example a security camera (wink, wink)</p>\n            <h2 id=\"Putty\">Putty</h2>\n            <p>Putty is a software used by windows users to access a shell at a unix based machine.</p>\n            <p>So when someone puttys to a unix based machine a shell is opened.</p>\n            <p>(on a security camera a bourne shell wink, wink)</p>\n            <h2 id=\"ShellCmd\">Shell commands</h2>\n            <p>As the shell we enbark our journey with is mainly Bourne shell (CLI)</p>\n            <p>We will not have any fancy graphical icons or fancy applications that displays pictures and so forth,</p>\n            <p>we will have to use our imagination which, still can be fun...</p>\n            <h3>Commands</h3>\n            <p>From here and a bit down south a couple of useful shell commands will be listed and described.</p>\n            <p>The description will have a windows translator so that any windows user that reads this</p>\n            <p>still can follow our journey and use once imagination to visualise what is happening.</p>\n            <ul>\n                <li>❤ <b>cd &lt;path&gt;</b> changes the directory you are currently exploring to the given &lt;path&gt; <br />\n                                           (same as clicking a folder icon in windows) </li>\n                <li>❤ <b>ls</b> lists all files in the directory you are currently exploring <br />\n                              (same as a window pop up in windows that shows you all the fancy icons)</li>\n                <li>❤ <b>cat &lt;file&gt;</b> displays the content of the given &lt;file&gt; <br />\n                                            (same as clicking e.g a txt file in windows)</li>\n                <li>❤ <b>mkdir &lt;name&gt;</b> creates a directory with the given &lt;name&gt; in the directory you are currently exploring<br />\n                                              (self explanatory)</li>\n                <li>❤ <b>pwd</b> displays the current directory you are exploring (incase you got lost)</li>\n            </ul>\n            <h2 id=\"GSTH\">Good Stuff To Have (GSTH)</h2>\n            <ul>\n                <li>❤ <b>.</b> . is the current directory you are exploring e.g <br />\n                             cd . means change direcotory to where I am right now (kind of useless) </li>\n                <li>❤ <b>..</b> .. is the directory one level above the directory you are currently exploring e.g <br /> \n                              cd .. means climb to the direcory above</li>\n                <li>❤ <b> &lt;something&gt; &gt; &lt;file&gt;</b> put whatever &lt;something&gt; returns into <br />\n                                                                &lt;file&gt; e.g echo \"Unicorn\" &gt; rainbow.txt <br />\n                                                                takes what echo \"Unicorn\" returns which is Unicorn and <br />\n                                                                puts that in the file rainbow.txt. <br /> \n                                                                rainbow.txt does not exist? Do not worry good old shell will create it for you\n                </li>\n                <li>❤ <b> &lt;something&gt; &gt;&gt; &lt;file&gt;</b> appends whatever &lt;something&gt; returns at the end of &lt;file&gt; e.g <br />\n                    echo \"Unicorn\" &gt;&gt; rainbow.txt <br />\n                    takes what echo \"Unicorn\" returns which is Unicorn and appends that at the end of the file rainbow.txt. <br /> \n                    rainbow.txt does not exist? Do not worry good old shell will create it for you\n                </li>\n                <li>❤ <b>&lt;something&gt; | &lt;something_else&gt;</b> takes whatever &lt;something&gt; returns <br />\n                                                                      and uses that as an argument to &lt;something_else&gt;<br /> \n                                                                      (Do not fear what you do not know... <br />\n                                                                      we will get to what: <a href=\"ArgZ\"><b>arguments</b></a> are in a bit be patient)\n                </li>\n            </ul>\n            <h2 id=\"Scriptz\">Scribes gonna script</h2>\n            <p>So now I hope we have juorneyed through what shell is and what putty does. Next step is to create some</p>\n            <TitleImg imgPath={imgUrl} alt=\"cool picture\" />\n            <h3>❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤MAGIC❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤</h3>\n            <p>By creating some scripts that a shell (a Bourne shell) can run on its own.</p>\n            <p>But before we do that is suggest you take a trip to the amazing world of Vi/m</p>\n            <p>or if you allready have been to the amazing world of Vi/m lets continue.</p>\n            <h3 id=\"CSript\">Creating a script</h3>\n            <p>Now open up your (Vi/m) new favorite text editor, either on your own computer or through a shell via putty</p>\n            <p>e.g on a security camera (wink, wink).</p>\n            <p>The first row of this newly created file should be #!/bin/sh</p>\n            <p>this line tells the shell that is running your script which shell it should run it in...</p>\n            <p>Confusing? Well yes of course it is!</p>\n            <p>A unix based operative system that runs on a device e.g a security camera (wink again ;)),</p>\n            <p>can have multiple differnet shells installed.</p>\n            <p>By writing #!/bin/sh we say use what ever shell used as standard e.g a Bourne shell</p>\n            <p>now save the file and make sure the file extension is .sh e.i save the file as e.g myScript.sh</p>\n            <h3 id=\"RunScript\">Running a script</h3>\n            <p>when the script is created we must make sure it can be executed on the machine we intend to use it on.</p>\n            <p>This is done by in a shell executing the following command:</p>\n            <p>sudo chmod 775 &lt;script_name&gt;.sh</p>\n            <p>One should note that the command sudo is not allways needed and that chmod 775 is overkill.</p>\n            <p>Now to execute the script simply type ./&lt;script_name&gt;.sh</p>\n            <p>The script created above will do nothing as it is empty but do not cry because:</p>\n            <p>Next we will go through the following things:</p>\n            <ul>\n                <a href=\"#CScript\"><li>❤ Creating a script</li></a>\n                <a href=\"#RunScript\"><li>❤ Running a script</li></a>\n                <a href=\"#ArgzPass\"><li>❤ Passing arguments</li></a>\n                <a href=\"#Exitscript\"><li>❤ Exiting a script</li></a>\n                <a href=\"#SimpleCmdzz\"><li>❤ Simple commands</li></a>\n                <a href=\"#Commentz\"><li>❤ Comments</li></a>\n                <a href=\"#Vbalz\"><li>❤ Variables</li></a>\n                <a href=\"#Argz\"><li>❤ Arguments</li></a>\n                <a href=\"#Funcz\"><li>❤ Functions</li></a>\n                <a href=\"#Cstatez\"><li>❤ Conditional statements</li></a>\n                <a href=\"#Loopz\"><li>❤ Loopy loops</li></a>\n            </ul>\n            <h3 id=\"ArgzPass\">Passing arguments</h3>\n            <p>When executing a command or a script one can give the command/script one or more presents</p>\n            <p>in different forms and shapes.</p>\n            <p>This is called passing arguments to the command/script.</p>\n            <p>Arguments are passed in the following way &lt;some_command&gt; &lt;argument_1&gt; &lt;...&gt; &lt;argument_n&gt;</p>\n            <p>As you can see you allready done this when you tested out the command cat &lt;some_file&gt;</p>\n            <p>here &lt;some_file&gt; is an argument to cat</p>\n            <h3 id=\"Exitscript\">Exiting a script</h3>\n            <p>To stop and exit a running command/script press crtl+c in your shell.</p>\n            <p>Note this will kill your script and not in a nice way.</p>\n            <h3 id=\"SimpleCmdzz\">Simple commands</h3>\n            <p>After the first row one can write any shell command one feels necessary e.g a small script might look as follow:</p>\n            <Sheet>{`\n                #!/bin/sh\n                cat file_1.txt >> loggy.log\n            `}</Sheet>\n            <p>When someone runs this script the script will cat (print) what is in file_1.txt and</p>\n            <p>append what is printed at the end of the file loggy.log</p>\n            <p>So one can just keep adding lines with differnet commands to the script file and when the script is executed</p>\n            <p>the commands will be executed in the order they are written</p>\n            <h3 id =\"Commentz\">Comments</h3>\n            <p>All lines beginning with a # (except the first one) is a comment and will not be executed.</p>\n            <h3 id=\"Vbalz\">Variables</h3>\n            <p>One can create what is called variables, these kind little helpers is simply names that have a given value.</p>\n            <p>E.g i want to use the value 0x420 many times but i do not want to write 0x420 all the time and</p>\n            <p>0x420 is not self explainatory but if I create a variable with a explainatory name e.g as SMOKERSDAY=0x420</p>\n            <p>one will directly know when you see $SMOKERSDAY that the value is 0x420.</p>\n            <p>Note that when creating the variable no $ dollar bill yall is used. but when \"calling\" the variable</p>\n            <p>It is full CREAM with $SMOKERSDAY in this way the shell can know if it is suppose to create or use a variable.</p>\n            <h3 id=\"Argz\">Arguments</h3>\n            <p>In order to take care of any arguments in your script you can access them via the \"variables\" $0 ... $n</p>\n            <p>Where $0 is a special one, this is the name of the command that is executed.</p>\n            <p>$1 and so forth are the arguments in order given to the script at execution.</p>\n            <h3 id=\"Funcz\">Functions</h3>\n            <p>Let us create som functions or commands within the script it self.</p>\n            <p>To create a function you will have to write the following in your script file:</p>\n            <Sheet>{`\n                some_function_name(){\n                    #function contet goes here\n                }\n            `}</Sheet>\n            <p>The above function just has a comment and does not for now do anything.</p>\n            <p>To use this function in your script just call its name like so:</p>\n            <Sheet>{`\n                some_function_name\n            `}</Sheet>\n            <p>to call it with arguments:</p>\n            <Sheet>{`\n                some_function_name <arg1> <arg2> <...> <argN>\n            `}</Sheet>\n            <p>Note that function work just as a script within the script it self as mentioned above.</p>\n            <p>That means that taking care of arguments work the same with full CREAM with $0 $1 and so forth</p>\n            <p>creating and calling variables and calling other functions/commands e.g cat ls some_other_function_created</p>\n            <p>Here is an example to gaze upon:</p>\n            <Sheet>{`\n                #!/bin/sh\n                #Name of this script is test.sh\n                SMOKERSDAY=0x420\n                funny_func(){\n                    echo $1\n                }\n                call_on_me() {\n                    funny_func $1\n                }\n                call_on_me $SMOKERSDAY\n            `}</Sheet>\n            <p>What does ./test.sh do?</p>\n            <p>Well it prints 0x420 in the shell it is executed in.</p>\n            <h3 id=\"CStatez\">Conditional statements</h3>\n            <p>Lets lay down some conditions.</p>\n            <p>What is a conditional statement?</p>\n            <p>Well basically it is a question or a statement in the form of if.</p>\n            <p>If this is true do this else if this is true do that else do what ever.</p>\n            <p>For example:</p>\n            <Sheet>{`\n                if [ 1 -gt 0 ]\n                then\n                  echo YES\n                fi\n            `}</Sheet>\n            <p>The above statement does the following:</p>\n            <ol>\n                <li>Checks if 1 is greater than (-gt) 0 then echo YES</li>\n            </ol>\n            <p>Another one:</p>\n            <Sheet>{`\n                if [ $1 -gt 2 ]\n                then\n                  echo YES\n                else if [ $1 -le 4 ]\n                    echo \"Oooh YEAS\"\n                fi\n            `}</Sheet>\n            <p>The example above does the following:</p>\n            <ol>\n                <li>Checks if the first argument ($1) is greater than (-gt) 2 if it is then echo YES if not:</li>\n                <li>Checks if the first argument ($1) is less than (-lt) 4 if it is then echo \"Oooh YEAS\" </li>\n            </ol>\n            <p>And in the spirit of DJ Khaled And another one:</p>\n            <Sheet>{`\n                if [ $1 -gt 2 ]\n                then\n                  echo YES\n                else if [ $1 -le 4 ]\n                    echo \"Oooh YEAS\"\n                else\n                    echo \"Hell YEAH!\"\n                fi\n            `}</Sheet>\n             <p>The example above does the following:</p>\n            <ol>\n                <li>Checks if the first argument ($1) is greater than (-gt) 2 if it is then echo YES if not:</li>\n                <li>Checks if the first argument ($1) is less than (-lt) 4 if it is then echo Oooh YEAS </li>\n                <li>If non of the above echo Hell YEAH!</li>\n            </ol>\n            <h3 id=\"Loopz\">Loopy loops</h3>\n            <p>Lets gaze opon a special kind of conditional statement, that does the same thing a couple of times</p>\n            <p>or for infinity.</p>\n            <p>This is loops.</p>\n            <p>An loop is exactly what its name implies.</p>\n            <p>There are 2 kinds of loops one is called <b>for</b> and one is called <b>while</b>.</p>\n            <p>The <b>for</b> loop is a special kind of while and can look like this:</p>\n            <Sheet>{`\n                for i in 1 2 3 4 5\n                do\n                    echo \"Looping ... number $i\"\n                done\n            `}</Sheet>\n            <p><b>i</b> can be replaced with any name you like but <b>i,j,k</b> is the most commonly used.</p>\n            <p><b>i</b> is called a loop index.</p>\n            <p><b>1 2 3 4 5</b> can be replaced with any other compatible set.</p>\n            <p>Beween <b>do</b> and <b>done</b> you specify what is to be done in a loop,</p>\n            <p>in the example above just echo some text.</p>\n            <p>Now lets look on <b>while</b> for a while...</p>\n            <p>A while loop can look like this:</p>\n            <Sheet>{`\n                INPUT_STRING=hello\n                while [ \"$INPUT_STRING\" != \"bye\" ]\n                do\n                    echo \"Please type something in (bye to quit)\"\n                    read INPUT_STRING\n                    echo \"You typed: $INPUT_STRING\"\n                done\n            `}</Sheet>\n            <p>Do not fear!</p>\n            <p>I know it looks advanced and scary, but the main thing here is that the loop goes on until:</p>\n            <p>The condition [ \"$INPUT_STRING\" != \"bye\" ] is true, e.i $INPUT_STRING is equal to bye then</p>\n            <p>the loop quits looping.</p>\n            <p>So [ \"$INPUT_STRING\" != \"bye\" ] can be switched out to any condition e.g [ 1 ] which will make</p>\n            <p>the while loop go on for ever until crtl+c is pressed.</p>\n            <h2 id=\"CheatSheets\">Cheat sheets</h2>\n            <Sheet>{`\n                cd <path>     change directory to <path>\n                cat <file>    print content of <file>\n                ls            show which files are in the current directory\n                >> <file>     append to\n                >  <file>     write to\n            `}</Sheet>\n            <p>\n                Well thats all for now GLHF!\n            <br />\n            <br />\n            </p>\n            <StickyFooter>\n                <a href=\"#WhatIShell\"><b>What is shell?</b></a>\n                <a href=\"#Bourne\"><b>Bourne</b></a>\n                <a href=\"#Putty\"><b>Putty</b></a>\n                <a href=\"#ShellCmd\"><b>Shell commands</b></a>\n                <a href=\"#Scriptz\"><b>Scribes gonna script</b></a>\n                <a href=\"#GSTH\"><b>Good Stuff To Have (GSTH)</b></a>\n                <a href=\"#CheatSheets\"><b>Cheat sheets</b></a>\n            </StickyFooter>\n        </Content>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}