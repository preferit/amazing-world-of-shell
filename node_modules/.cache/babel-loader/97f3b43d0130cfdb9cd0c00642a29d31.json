{"ast":null,"code":"import React from'react';import{Content}from'../../molecules';import{StickyFooter}from'../../molecules';import{TitleImg}from'../../molecules';import{Sheet}from'../../molecules';export var Shell=function Shell(){var imgUrl=require('../../../assets/images/rainbow.png');return React.createElement(Content,null,React.createElement(\"h2\",{id:\"WhatIShell\"},\"What is shell?\"),React.createElement(\"p\",null,\"A shell is a command-line interpreter which exposes access to an operating system's services.\"),React.createElement(\"p\",null,\"In general, operating system shells use either a command-line interface (CLI)\"),React.createElement(\"p\",null,\"or graphical user interface (GUI), depending on a computer's role and particular operation.\"),React.createElement(\"p\",null,\"It is named a shell because it is the outermost layer around the operating system.\"),React.createElement(\"p\",null,\"If you connect to a security camera (wink, wink) you can be almost certain that the outermost layer is a CLI shell,\"),React.createElement(\"p\",null,\"a shell that is probably a bourne shell\"),React.createElement(\"h2\",{id:\"Bourne\"},\"Bourne Shell\"),React.createElement(\"p\",null,\"Developed by Stephen Bourne, father of Jason (David) Bourne (Webb).\"),React.createElement(\"p\",null,\"A Bourne shell is the mostly spread and used CLI shell to this day, and is featured on almost\"),React.createElement(\"p\",null,\"every embedded unix based machine for example a security camera (wink, wink)\"),React.createElement(\"h2\",{id:\"Putty\"},\"Putty\"),React.createElement(\"p\",null,\"Putty is a software used by windows users to access a shell at a unix based machine.\"),React.createElement(\"p\",null,\"So when someone puttys to a unix based machine a shell is opened.\"),React.createElement(\"p\",null,\"(on a security camera a bourne shell wink, wink)\"),React.createElement(\"h2\",{id:\"ShellCmd\"},\"Shell commands\"),React.createElement(\"p\",null,\"As the shell we enbark our journey with is mainly Bourne shell (CLI)\"),React.createElement(\"p\",null,\"We will not have any fancy graphical icons or fancy applications that displays pictures and so forth,\"),React.createElement(\"p\",null,\"we will have to use our imagination which, still can be fun...\"),React.createElement(\"h3\",null,\"Commands\"),React.createElement(\"p\",null,\"From here and a bit down south a couple of useful shell commands will be listed and described.\"),React.createElement(\"p\",null,\"The description will have a windows translator so that any windows user that reads this\"),React.createElement(\"p\",null,\"still can follow our journey and use once imagination to visualise what is happening.\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\"cd <path>\"),\" changes the directory you are currently exploring to the given <path> \",React.createElement(\"br\",null),\"(same as clicking a folder icon in windows) \"),React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\"ls\"),\" lists all files in the directory you are currently exploring \",React.createElement(\"br\",null),\"(same as a window pop up in windows that shows you all the fancy icons)\"),React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\"cat <file>\"),\" displays the content of the given <file> \",React.createElement(\"br\",null),\"(same as clicking e.g a txt file in windows)\"),React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\"mkdir <name>\"),\" creates a directory with the given <name> in the directory you are currently exploring\",React.createElement(\"br\",null),\"(self explanatory)\"),React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\"pwd\"),\" displays the current directory you are exploring (incase you got lost)\")),React.createElement(\"h2\",{id:\"GSTH\"},\"Good Stuff To Have (GSTH)\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\".\"),\" . is the current directory you are exploring e.g \",React.createElement(\"br\",null),\"cd . means change direcotory to where I am right now (kind of useless) \"),React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\"..\"),\" .. is the directory one level above the directory you are currently exploring e.g \",React.createElement(\"br\",null),\"cd .. means climb to the direcory above\"),React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\" <something> > <file>\"),\" put whatever <something> returns into \",React.createElement(\"br\",null),\"<file> e.g echo \\\"Unicorn\\\" > rainbow.txt \",React.createElement(\"br\",null),\"takes what echo \\\"Unicorn\\\" returns which is Unicorn and \",React.createElement(\"br\",null),\"puts that in the file rainbow.txt. \",React.createElement(\"br\",null),\"rainbow.txt does not exist? Do not worry good old shell will create it for you\"),React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\" <something> >> <file>\"),\" appends whatever <something> returns at the end of <file> e.g \",React.createElement(\"br\",null),\"echo \\\"Unicorn\\\" >> rainbow.txt \",React.createElement(\"br\",null),\"takes what echo \\\"Unicorn\\\" returns which is Unicorn and appends that at the end of the file rainbow.txt. \",React.createElement(\"br\",null),\"rainbow.txt does not exist? Do not worry good old shell will create it for you\"),React.createElement(\"li\",null,\"\\u2764 \",React.createElement(\"b\",null,\"<something> | <something_else>\"),\" takes whatever <something> returns \",React.createElement(\"br\",null),\"and uses that as an argument to <something_else>\",React.createElement(\"br\",null),\"(Do not fear what you do not know... \",React.createElement(\"br\",null),\"we will get to what: \",React.createElement(\"a\",{href:\"ArgZ\"},React.createElement(\"b\",null,\"arguments\")),\" are in a bit be patient)\")),React.createElement(\"h2\",{id:\"Scriptz\"},\"Scribes gonna script\"),React.createElement(\"p\",null,\"So now I hope we have juorneyed through what shell is and what putty does. Next step is to create some\"),React.createElement(TitleImg,{imgPath:imgUrl,alt:\"cool picture\"}),React.createElement(\"h3\",null,\"\\u2764MAGIC\\u2764\"),React.createElement(\"p\",null,\"By creating some scripts that a shell (a Bourne shell) can run on its own.\"),React.createElement(\"p\",null,\"But before we do that is suggest you take a trip to the amazing world of Vi/m\"),React.createElement(\"p\",null,\"or if you allready have been to the amazing world of Vi/m lets continue.\"),React.createElement(\"h3\",{id:\"CSript\"},\"Creating a script\"),React.createElement(\"p\",null,\"Now open up your (Vi/m) new favorite text editor, either on your own computer or through a shell via putty\"),React.createElement(\"p\",null,\"e.g on a security camera (wink, wink).\"),React.createElement(\"p\",null,\"The first row of this newly created file should be #!/bin/sh\"),React.createElement(\"p\",null,\"this line tells the shell that is running your script which shell it should run it in...\"),React.createElement(\"p\",null,\"Confusing? Well yes of course it is!\"),React.createElement(\"p\",null,\"A unix based operative system that runs on a device e.g a security camera (wink again ;)),\"),React.createElement(\"p\",null,\"can have multiple differnet shells installed.\"),React.createElement(\"p\",null,\"By writing #!/bin/sh we say use what ever shell used as standard e.g a Bourne shell\"),React.createElement(\"p\",null,\"now save the file and make sure the file extension is .sh e.i save the file as e.g myScript.sh\"),React.createElement(\"h3\",{id:\"RunScript\"},\"Running a script\"),React.createElement(\"p\",null,\"when the script is created we must make sure it can be executed on the machine we intend to use it on.\"),React.createElement(\"p\",null,\"This is done by in a shell executing the following command:\"),React.createElement(\"p\",null,\"sudo chmod 775 <script_name>.sh\"),React.createElement(\"p\",null,\"One should note that the command sudo is not allways needed and that chmod 775 is overkill.\"),React.createElement(\"p\",null,\"Now to execute the script simply type ./<script_name>.sh\"),React.createElement(\"p\",null,\"The script created above will do nothing as it is empty but do not cry because:\"),React.createElement(\"p\",null,\"Next we will go through the following things:\"),React.createElement(\"ul\",null,React.createElement(\"a\",{href:\"#CScript\"},React.createElement(\"li\",null,\"\\u2764 Creating a script\")),React.createElement(\"a\",{href:\"#RunScript\"},React.createElement(\"li\",null,\"\\u2764 Running a script\")),React.createElement(\"a\",{href:\"#ArgzPass\"},React.createElement(\"li\",null,\"\\u2764 Passing arguments\")),React.createElement(\"a\",{href:\"#Exitscript\"},React.createElement(\"li\",null,\"\\u2764 Exiting a script\")),React.createElement(\"a\",{href:\"#SimpleCmdzz\"},React.createElement(\"li\",null,\"\\u2764 Simple commands\")),React.createElement(\"a\",{href:\"#Commentz\"},React.createElement(\"li\",null,\"\\u2764 Comments\")),React.createElement(\"a\",{href:\"#Vbalz\"},React.createElement(\"li\",null,\"\\u2764 Variables\")),React.createElement(\"a\",{href:\"#Argz\"},React.createElement(\"li\",null,\"\\u2764 Arguments\")),React.createElement(\"a\",{href:\"#Funcz\"},React.createElement(\"li\",null,\"\\u2764 Functions\")),React.createElement(\"a\",{href:\"#Cstatez\"},React.createElement(\"li\",null,\"\\u2764 Conditional statements\")),React.createElement(\"a\",{href:\"#Loopz\"},React.createElement(\"li\",null,\"\\u2764 Loopy loops\"))),React.createElement(\"h3\",{id:\"ArgzPass\"},\"Passing arguments\"),React.createElement(\"p\",null,\"When executing a command or a script one can give the command/script one or more presents\"),React.createElement(\"p\",null,\"in different forms and shapes.\"),React.createElement(\"p\",null,\"This is called passing arguments to the command/script.\"),React.createElement(\"p\",null,\"Arguments are passed in the following way <some_command> <argument_1> <...> <argument_n>\"),React.createElement(\"p\",null,\"As you can see you allready done this when you tested out the command cat <some_file>\"),React.createElement(\"p\",null,\"here <some_file> is an argument to cat\"),React.createElement(\"h3\",{id:\"Exitscript\"},\"Exiting a script\"),React.createElement(\"p\",null,\"To stop and exit a running command/script press crtl+c in your shell.\"),React.createElement(\"p\",null,\"Note this will kill your script and not in a nice way.\"),React.createElement(\"h3\",{id:\"SimpleCmdzz\"},\"Simple commands\"),React.createElement(\"p\",null,\"After the first row one can write any shell command one feels necessary e.g a small script might look as follow:\"),React.createElement(Sheet,null,\"\\n#!/bin/sh\\ncat file_1.txt >> loggy.log\\n            \"),React.createElement(\"p\",null,\"When someone runs this script the script will cat (print) what is in file_1.txt and\"),React.createElement(\"p\",null,\"append what is printed at the end of the file loggy.log\"),React.createElement(\"p\",null,\"So one can just keep adding lines with differnet commands to the script file and when the script is executed\"),React.createElement(\"p\",null,\"the commands will be executed in the order they are written\"),React.createElement(\"h3\",{id:\"Commentz\"},\"Comments\"),React.createElement(\"p\",null,\"All lines beginning with a # (except the first one) is a comment and will not be executed.\"),React.createElement(\"h3\",{id:\"Vbalz\"},\"Variables\"),React.createElement(\"p\",null,\"One can create what is called variables, these kind little helpers is simply names that have a given value.\"),React.createElement(\"p\",null,\"E.g i want to use the value 0x420 many times but i do not want to write 0x420 all the time and\"),React.createElement(\"p\",null,\"0x420 is not self explainatory but if I create a variable with a explainatory name e.g as SMOKERSDAY=0x420\"),React.createElement(\"p\",null,\"one will directly know when you see $SMOKERSDAY that the value is 0x420.\"),React.createElement(\"p\",null,\"Note that when creating the variable no $ dollar bill yall is used. but when \\\"calling\\\" the variable\"),React.createElement(\"p\",null,\"It is full CREAM with $SMOKERSDAY in this way the shell can know if it is suppose to create or use a variable.\"),React.createElement(\"h3\",{id:\"Argz\"},\"Arguments\"),React.createElement(\"p\",null,\"In order to take care of any arguments in your script you can access them via the \\\"variables\\\" $0 ... $n\"),React.createElement(\"p\",null,\"Where $0 is a special one, this is the name of the command that is executed.\"),React.createElement(\"p\",null,\"$1 and so forth are the arguments in order given to the script at execution.\"),React.createElement(\"h3\",{id:\"Funcz\"},\"Functions\"),React.createElement(\"p\",null,\"Let us create som functions or commands within the script it self.\"),React.createElement(\"p\",null,\"To create a function you will have to write the following in your script file:\"),React.createElement(Sheet,null,\"\\nsome_function_name(){\\n    #function contet goes here\\n}\\n            \"),React.createElement(\"p\",null,\"The above function just has a comment and does not for now do anything.\"),React.createElement(\"p\",null,\"To use this function in your script just call its name like so:\"),React.createElement(Sheet,null,\"\\nsome_function_name\\n            \"),React.createElement(\"p\",null,\"to call it with arguments:\"),React.createElement(Sheet,null,\"\\nsome_function_name <arg1> <arg2> <...> <argN>\\n            \"),React.createElement(\"p\",null,\"Note that function work just as a script within the script it self as mentioned above.\"),React.createElement(\"p\",null,\"That means that taking care of arguments work the same with full CREAM with $0 $1 and so forth\"),React.createElement(\"p\",null,\"creating and calling variables and calling other functions/commands e.g cat ls some_other_function_created\"),React.createElement(\"p\",null,\"Here is an example to gaze upon:\"),React.createElement(Sheet,null,\"\\n#!/bin/sh\\n#Name of this script is test.sh\\nSMOKERSDAY=0x420\\nfunny_func(){\\n    echo $1\\n}\\ncall_on_me() {\\n    funny_func $1\\n}\\ncall_on_me $SMOKERSDAY\\n            \"),React.createElement(\"p\",null,\"What does ./test.sh do?\"),React.createElement(\"p\",null,\"Well it prints 0x420 in the shell it is executed in.\"),React.createElement(\"h3\",{id:\"CStatez\"},\"Conditional statements\"),React.createElement(\"p\",null,\"Lets lay down some conditions.\"),React.createElement(\"p\",null,\"What is a conditional statement?\"),React.createElement(\"p\",null,\"Well basically it is a question or a statement in the form of if.\"),React.createElement(\"p\",null,\"If this is true do this else if this is true do that else do what ever.\"),React.createElement(\"p\",null,\"For example:\"),React.createElement(Sheet,null,\"\\nif [ 1 -gt 0 ]\\nthen\\n   echo YES\\nfi\\n            \"),React.createElement(\"p\",null,\"The above statement does the following:\"),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"Checks if 1 is greater than (-gt) 0 then echo YES\")),React.createElement(\"p\",null,\"Another one:\"),React.createElement(Sheet,null,\"\\nif [ $1 -gt 2 ]\\nthen\\n   echo YES\\nelse if [ $1 -le 4 ]\\n    echo \\\"Oooh YEAS\\\"\\nfi\\n            \"),React.createElement(\"p\",null,\"The example above does the following:\"),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"Checks if the first argument ($1) is greater than (-gt) 2 if it is then echo YES if not:\"),React.createElement(\"li\",null,\"Checks if the first argument ($1) is less than (-lt) 4 if it is then echo \\\"Oooh YEAS\\\" \")),React.createElement(\"p\",null,\"And in the spirit of DJ Khaled And another one:\"),React.createElement(Sheet,null,\"\\nif [ $1 -gt 2 ]\\nthen\\n    echo YES\\nelse if [ $1 -le 4 ]\\n    echo \\\"Oooh YEAS\\\"\\nelse\\n    echo \\\"Hell YEAH!\\\"\\nfi\\n            \"),React.createElement(\"p\",null,\"The example above does the following:\"),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"Checks if the first argument ($1) is greater than (-gt) 2 if it is then echo YES if not:\"),React.createElement(\"li\",null,\"Checks if the first argument ($1) is less than (-lt) 4 if it is then echo Oooh YEAS \"),React.createElement(\"li\",null,\"If non of the above echo Hell YEAH!\")),React.createElement(\"h3\",{id:\"Loopz\"},\"Loopy loops\"),React.createElement(\"p\",null,\"Lets gaze opon a special kind of conditional statement, that does the same thing a couple of times\"),React.createElement(\"p\",null,\"or for infinity.\"),React.createElement(\"p\",null,\"This is loops.\"),React.createElement(\"p\",null,\"An loop is exactly what its name implies.\"),React.createElement(\"p\",null,\"There are 2 kinds of loops one is called \",React.createElement(\"b\",null,\"for\"),\" and one is called \",React.createElement(\"b\",null,\"while\"),\".\"),React.createElement(\"p\",null,\"The \",React.createElement(\"b\",null,\"for\"),\" loop is a special kind of while and can look like this:\"),React.createElement(Sheet,null,\"\\nfor i in 1 2 3 4 5\\ndo\\n    echo \\\"Looping ... number $i\\\"\\ndone\\n            \"),React.createElement(\"p\",null,React.createElement(\"b\",null,\"i\"),\" can be replaced with any name you like but \",React.createElement(\"b\",null,\"i,j,k\"),\" is the most commonly used.\"),React.createElement(\"p\",null,React.createElement(\"b\",null,\"i\"),\" is called a loop index.\"),React.createElement(\"p\",null,React.createElement(\"b\",null,\"1 2 3 4 5\"),\" can be replaced with any other compatible set.\"),React.createElement(\"p\",null,\"Beween \",React.createElement(\"b\",null,\"do\"),\" and \",React.createElement(\"b\",null,\"done\"),\" you specify what is to be done in a loop,\"),React.createElement(\"p\",null,\"in the example above just echo some text.\"),React.createElement(\"p\",null,\"Now lets look on \",React.createElement(\"b\",null,\"while\"),\" for a while...\"),React.createElement(\"p\",null,\"A while loop can look like this:\"),React.createElement(Sheet,null,\"\\nINPUT_STRING=hello\\nwhile [ \\\"$INPUT_STRING\\\" != \\\"bye\\\" ]\\ndo\\n    echo \\\"Please type something in (bye to quit)\\\"\\n    read INPUT_STRING\\n    echo \\\"You typed: $INPUT_STRING\\\"\\ndone\\n            \"),React.createElement(\"p\",null,\"Do not fear!\"),React.createElement(\"p\",null,\"I know it looks advanced and scary, but the main thing here is that the loop goes on until:\"),React.createElement(\"p\",null,\"The condition [ \\\"$INPUT_STRING\\\" != \\\"bye\\\" ] is true, e.i $INPUT_STRING is equal to bye then\"),React.createElement(\"p\",null,\"the loop quits looping.\"),React.createElement(\"p\",null,\"So [ \\\"$INPUT_STRING\\\" != \\\"bye\\\" ] can be switched out to any condition e.g [ 1 ] which will make\"),React.createElement(\"p\",null,\"the while loop go on for ever until crtl+c is pressed.\"),React.createElement(\"h2\",{id:\"CheatSheets\"},\"Cheat sheets\"),React.createElement(Sheet,null,\"\\ncd <path>     change directory to <path>\\ncat <file>    print content of <file>\\nls            show which files are in the current directory\\n>> <file>     append to\\n>  <file>     write to\\n            \"),React.createElement(\"p\",null,\"Well thats all for now GLHF!\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null)),React.createElement(StickyFooter,null,React.createElement(\"a\",{href:\"#WhatIShell\"},React.createElement(\"b\",null,\"What is shell?\")),React.createElement(\"a\",{href:\"#Bourne\"},React.createElement(\"b\",null,\"Bourne\")),React.createElement(\"a\",{href:\"#Putty\"},React.createElement(\"b\",null,\"Putty\")),React.createElement(\"a\",{href:\"#ShellCmd\"},React.createElement(\"b\",null,\"Shell commands\")),React.createElement(\"a\",{href:\"#Scriptz\"},React.createElement(\"b\",null,\"Scribes gonna script\")),React.createElement(\"a\",{href:\"#GSTH\"},React.createElement(\"b\",null,\"Good Stuff To Have (GSTH)\")),React.createElement(\"a\",{href:\"#CheatSheets\"},React.createElement(\"b\",null,\"Cheat sheets\"))));};","map":{"version":3,"sources":["/home/axis/Development/the-amazing-world-of-shell/src/components/organisms/shell/Shell.jsx"],"names":["React","Content","StickyFooter","TitleImg","Sheet","Shell","imgUrl","require"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,YAAT,KAA6B,iBAA7B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,KAAT,KAAsB,iBAAtB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CACvB,GAAMC,CAAAA,MAAM,CAAGC,OAAO,CAAC,oCAAD,CAAtB,CACA,MACI,qBAAC,OAAD,MACI,0BAAI,EAAE,CAAC,YAAP,mBADJ,CAEI,6HAFJ,CAGI,6GAHJ,CAII,2HAJJ,CAKI,kHALJ,CAMI,mJANJ,CAOI,uEAPJ,CAQI,0BAAI,EAAE,CAAC,QAAP,iBARJ,CASI,mGATJ,CAUI,6HAVJ,CAWI,4GAXJ,CAYI,0BAAI,EAAE,CAAC,OAAP,UAZJ,CAaI,oHAbJ,CAcI,iGAdJ,CAeI,gFAfJ,CAgBI,0BAAI,EAAE,CAAC,UAAP,mBAhBJ,CAiBI,oGAjBJ,CAkBI,qIAlBJ,CAmBI,8FAnBJ,CAoBI,yCApBJ,CAqBI,8HArBJ,CAsBI,uHAtBJ,CAuBI,qHAvBJ,CAwBI,8BACI,wCAAM,yCAAN,2EAAyG,8BAAzG,gDADJ,CAGI,wCAAM,kCAAN,kEAA6E,8BAA7E,2EAHJ,CAKI,wCAAM,0CAAN,8CAA6E,8BAA7E,gDALJ,CAOI,wCAAM,4CAAN,2FAA4H,8BAA5H,sBAPJ,CASI,wCAAM,mCAAN,2EATJ,CAxBJ,CAmCI,0BAAI,EAAE,CAAC,MAAP,8BAnCJ,CAoCI,8BACI,wCAAM,iCAAN,sDAAgE,8BAAhE,2EADJ,CAGI,wCAAM,kCAAN,uFAAkG,8BAAlG,2CAHJ,CAKI,wCAAM,qDAAN,2CAA8F,8BAA9F,8CACiG,8BADjG,6DAEuG,8BAFvG,uCAGmF,8BAHnF,kFALJ,CAWI,wCAAM,sDAAN,mEAAgI,8BAAhI,oCACwC,8BADxC,8GAE4G,8BAF5G,kFAXJ,CAgBI,wCAAM,8DAAN,wCAAiG,8BAAjG,oDAC4G,8BAD5G,yCAE2F,8BAF3F,yBAG2E,yBAAG,IAAI,CAAC,MAAR,EAAe,yCAAf,CAH3E,6BAhBJ,CApCJ,CA0DI,0BAAI,EAAE,CAAC,SAAP,yBA1DJ,CA2DI,sIA3DJ,CA4DI,oBAAC,QAAD,EAAU,OAAO,CAAED,MAAnB,CAA2B,GAAG,CAAC,cAA/B,EA5DJ,CA6DI,kDA7DJ,CA8DI,0GA9DJ,CA+DI,6GA/DJ,CAgEI,wGAhEJ,CAiEI,0BAAI,EAAE,CAAC,QAAP,sBAjEJ,CAkEI,0IAlEJ,CAmEI,sEAnEJ,CAoEI,4FApEJ,CAqEI,wHArEJ,CAsEI,oEAtEJ,CAuEI,0HAvEJ,CAwEI,6EAxEJ,CAyEI,mHAzEJ,CA0EI,8HA1EJ,CA2EI,0BAAI,EAAE,CAAC,WAAP,qBA3EJ,CA4EI,sIA5EJ,CA6EI,2FA7EJ,CA8EI,+DA9EJ,CA+EI,2HA/EJ,CAgFI,wFAhFJ,CAiFI,+GAjFJ,CAkFI,6EAlFJ,CAmFI,8BACI,yBAAG,IAAI,CAAC,UAAR,EAAmB,yDAAnB,CADJ,CAEI,yBAAG,IAAI,CAAC,YAAR,EAAqB,wDAArB,CAFJ,CAGI,yBAAG,IAAI,CAAC,WAAR,EAAoB,yDAApB,CAHJ,CAII,yBAAG,IAAI,CAAC,aAAR,EAAsB,wDAAtB,CAJJ,CAKI,yBAAG,IAAI,CAAC,cAAR,EAAuB,uDAAvB,CALJ,CAMI,yBAAG,IAAI,CAAC,WAAR,EAAoB,gDAApB,CANJ,CAOI,yBAAG,IAAI,CAAC,QAAR,EAAiB,iDAAjB,CAPJ,CAQI,yBAAG,IAAI,CAAC,OAAR,EAAgB,iDAAhB,CARJ,CASI,yBAAG,IAAI,CAAC,QAAR,EAAiB,iDAAjB,CATJ,CAUI,yBAAG,IAAI,CAAC,UAAR,EAAmB,8DAAnB,CAVJ,CAWI,yBAAG,IAAI,CAAC,QAAR,EAAiB,mDAAjB,CAXJ,CAnFJ,CAgGI,0BAAI,EAAE,CAAC,UAAP,sBAhGJ,CAiGI,yHAjGJ,CAkGI,8DAlGJ,CAmGI,uFAnGJ,CAoGI,wHApGJ,CAqGI,qHArGJ,CAsGI,sEAtGJ,CAuGI,0BAAI,EAAE,CAAC,YAAP,qBAvGJ,CAwGI,qGAxGJ,CAyGI,sFAzGJ,CA0GI,0BAAI,EAAE,CAAC,aAAP,oBA1GJ,CA2GI,gJA3GJ,CA4GI,oBAAC,KAAD,+DA5GJ,CAgHI,mHAhHJ,CAiHI,uFAjHJ,CAkHI,4IAlHJ,CAmHI,2FAnHJ,CAoHI,0BAAI,EAAE,CAAE,UAAR,aApHJ,CAqHI,0HArHJ,CAsHI,0BAAI,EAAE,CAAC,OAAP,cAtHJ,CAuHI,2IAvHJ,CAwHI,8HAxHJ,CAyHI,0IAzHJ,CA0HI,wGA1HJ,CA2HI,qIA3HJ,CA4HI,8IA5HJ,CA6HI,0BAAI,EAAE,CAAC,MAAP,cA7HJ,CA8HI,yIA9HJ,CA+HI,4GA/HJ,CAgII,4GAhIJ,CAiII,0BAAI,EAAE,CAAC,OAAP,cAjIJ,CAkII,kGAlIJ,CAmII,8GAnIJ,CAoII,oBAAC,KAAD,iFApIJ,CAyII,uGAzIJ,CA0II,+FA1IJ,CA2II,oBAAC,KAAD,2CA3IJ,CA8II,0DA9IJ,CA+II,oBAAC,KAAD,sEA/IJ,CAkJI,sHAlJJ,CAmJI,8HAnJJ,CAoJI,0IApJJ,CAqJI,gEArJJ,CAsJI,oBAAC,KAAD,kLAtJJ,CAkKI,uDAlKJ,CAmKI,oFAnKJ,CAoKI,0BAAI,EAAE,CAAC,SAAP,2BApKJ,CAqKI,8DArKJ,CAsKI,gEAtKJ,CAuKI,iGAvKJ,CAwKI,uGAxKJ,CAyKI,4CAzKJ,CA0KI,oBAAC,KAAD,8DA1KJ,CAgLI,uEAhLJ,CAiLI,8BACI,kFADJ,CAjLJ,CAoLI,4CApLJ,CAqLI,oBAAC,KAAD,6GArLJ,CA6LI,qEA7LJ,CA8LI,8BACI,yHADJ,CAEI,yHAFJ,CA9LJ,CAkMI,+EAlMJ,CAmMI,oBAAC,KAAD,6IAnMJ,CA6MK,qEA7ML,CA8MI,8BACI,yHADJ,CAEI,qHAFJ,CAGI,oEAHJ,CA9MJ,CAmNI,0BAAI,EAAE,CAAC,OAAP,gBAnNJ,CAoNI,kIApNJ,CAqNI,gDArNJ,CAsNI,8CAtNJ,CAuNI,yEAvNJ,CAwNI,yEAA4C,mCAA5C,uBAAyE,qCAAzE,KAxNJ,CAyNI,oCAAO,mCAAP,4DAzNJ,CA0NI,oBAAC,KAAD,yFA1NJ,CAgOI,6BAAG,iCAAH,gDAAuD,qCAAvD,+BAhOJ,CAiOI,6BAAG,iCAAH,4BAjOJ,CAkOI,6BAAG,yCAAH,mDAlOJ,CAmOI,uCAAU,kCAAV,SAAwB,oCAAxB,8CAnOJ,CAoOI,yEApOJ,CAqOI,iDAAoB,qCAApB,mBArOJ,CAsOI,gEAtOJ,CAuOI,oBAAC,KAAD,gNAvOJ,CAgPI,4CAhPJ,CAiPI,2HAjPJ,CAkPI,8HAlPJ,CAmPI,uDAnPJ,CAoPI,kIApPJ,CAqPI,sFArPJ,CAsPI,0BAAI,EAAE,CAAC,aAAP,iBAtPJ,CAuPI,oBAAC,KAAD,sNAvPJ,CA8PI,4DAEA,8BAFA,CAGA,8BAHA,CAIA,8BAJA,CAKA,8BALA,CAMA,8BANA,CAOA,8BAPA,CAQA,8BARA,CASA,8BATA,CA9PJ,CAyQI,oBAAC,YAAD,MACI,yBAAG,IAAI,CAAC,aAAR,EAAsB,8CAAtB,CADJ,CAEI,yBAAG,IAAI,CAAC,SAAR,EAAkB,sCAAlB,CAFJ,CAGI,yBAAG,IAAI,CAAC,QAAR,EAAiB,qCAAjB,CAHJ,CAII,yBAAG,IAAI,CAAC,WAAR,EAAoB,8CAApB,CAJJ,CAKI,yBAAG,IAAI,CAAC,UAAR,EAAmB,oDAAnB,CALJ,CAMI,yBAAG,IAAI,CAAC,OAAR,EAAgB,yDAAhB,CANJ,CAOI,yBAAG,IAAI,CAAC,cAAR,EAAuB,4CAAvB,CAPJ,CAzQJ,CADJ,CAqRH,CAvRM","sourcesContent":["import React from 'react';\nimport { Content } from '../../molecules';\nimport { StickyFooter } from '../../molecules';\nimport { TitleImg } from '../../molecules';\nimport { Sheet } from '../../molecules';\n\nexport const Shell = () => {\n    const imgUrl = require('../../../assets/images/rainbow.png');\n    return (\n        <Content>\n            <h2 id=\"WhatIShell\">What is shell?</h2>\n            <p>A shell is a command-line interpreter which exposes access to an operating system's services.</p> \n            <p>In general, operating system shells use either a command-line interface (CLI)</p>\n            <p>or graphical user interface (GUI), depending on a computer's role and particular operation.</p> \n            <p>It is named a shell because it is the outermost layer around the operating system.</p>\n            <p>If you connect to a security camera (wink, wink) you can be almost certain that the outermost layer is a CLI shell,</p>\n            <p>a shell that is probably a bourne shell</p>\n            <h2 id=\"Bourne\">Bourne Shell</h2>\n            <p>Developed by Stephen Bourne, father of Jason (David) Bourne (Webb).</p>\n            <p>A Bourne shell is the mostly spread and used CLI shell to this day, and is featured on almost</p>\n            <p>every embedded unix based machine for example a security camera (wink, wink)</p>\n            <h2 id=\"Putty\">Putty</h2>\n            <p>Putty is a software used by windows users to access a shell at a unix based machine.</p>\n            <p>So when someone puttys to a unix based machine a shell is opened.</p>\n            <p>(on a security camera a bourne shell wink, wink)</p>\n            <h2 id=\"ShellCmd\">Shell commands</h2>\n            <p>As the shell we enbark our journey with is mainly Bourne shell (CLI)</p>\n            <p>We will not have any fancy graphical icons or fancy applications that displays pictures and so forth,</p>\n            <p>we will have to use our imagination which, still can be fun...</p>\n            <h3>Commands</h3>\n            <p>From here and a bit down south a couple of useful shell commands will be listed and described.</p>\n            <p>The description will have a windows translator so that any windows user that reads this</p>\n            <p>still can follow our journey and use once imagination to visualise what is happening.</p>\n            <ul>\n                <li>❤ <b>cd &lt;path&gt;</b> changes the directory you are currently exploring to the given &lt;path&gt; <br />\n                                           (same as clicking a folder icon in windows) </li>\n                <li>❤ <b>ls</b> lists all files in the directory you are currently exploring <br />\n                              (same as a window pop up in windows that shows you all the fancy icons)</li>\n                <li>❤ <b>cat &lt;file&gt;</b> displays the content of the given &lt;file&gt; <br />\n                                            (same as clicking e.g a txt file in windows)</li>\n                <li>❤ <b>mkdir &lt;name&gt;</b> creates a directory with the given &lt;name&gt; in the directory you are currently exploring<br />\n                                              (self explanatory)</li>\n                <li>❤ <b>pwd</b> displays the current directory you are exploring (incase you got lost)</li>\n            </ul>\n            <h2 id=\"GSTH\">Good Stuff To Have (GSTH)</h2>\n            <ul>\n                <li>❤ <b>.</b> . is the current directory you are exploring e.g <br />\n                             cd . means change direcotory to where I am right now (kind of useless) </li>\n                <li>❤ <b>..</b> .. is the directory one level above the directory you are currently exploring e.g <br /> \n                              cd .. means climb to the direcory above</li>\n                <li>❤ <b> &lt;something&gt; &gt; &lt;file&gt;</b> put whatever &lt;something&gt; returns into <br />\n                                                                &lt;file&gt; e.g echo \"Unicorn\" &gt; rainbow.txt <br />\n                                                                takes what echo \"Unicorn\" returns which is Unicorn and <br />\n                                                                puts that in the file rainbow.txt. <br /> \n                                                                rainbow.txt does not exist? Do not worry good old shell will create it for you\n                </li>\n                <li>❤ <b> &lt;something&gt; &gt;&gt; &lt;file&gt;</b> appends whatever &lt;something&gt; returns at the end of &lt;file&gt; e.g <br />\n                    echo \"Unicorn\" &gt;&gt; rainbow.txt <br />\n                    takes what echo \"Unicorn\" returns which is Unicorn and appends that at the end of the file rainbow.txt. <br /> \n                    rainbow.txt does not exist? Do not worry good old shell will create it for you\n                </li>\n                <li>❤ <b>&lt;something&gt; | &lt;something_else&gt;</b> takes whatever &lt;something&gt; returns <br />\n                                                                      and uses that as an argument to &lt;something_else&gt;<br /> \n                                                                      (Do not fear what you do not know... <br />\n                                                                      we will get to what: <a href=\"ArgZ\"><b>arguments</b></a> are in a bit be patient)\n                </li>\n            </ul>\n            <h2 id=\"Scriptz\">Scribes gonna script</h2>\n            <p>So now I hope we have juorneyed through what shell is and what putty does. Next step is to create some</p>\n            <TitleImg imgPath={imgUrl} alt=\"cool picture\" />\n            <h3>❤MAGIC❤</h3>\n            <p>By creating some scripts that a shell (a Bourne shell) can run on its own.</p>\n            <p>But before we do that is suggest you take a trip to the amazing world of Vi/m</p>\n            <p>or if you allready have been to the amazing world of Vi/m lets continue.</p>\n            <h3 id=\"CSript\">Creating a script</h3>\n            <p>Now open up your (Vi/m) new favorite text editor, either on your own computer or through a shell via putty</p>\n            <p>e.g on a security camera (wink, wink).</p>\n            <p>The first row of this newly created file should be #!/bin/sh</p>\n            <p>this line tells the shell that is running your script which shell it should run it in...</p>\n            <p>Confusing? Well yes of course it is!</p>\n            <p>A unix based operative system that runs on a device e.g a security camera (wink again ;)),</p>\n            <p>can have multiple differnet shells installed.</p>\n            <p>By writing #!/bin/sh we say use what ever shell used as standard e.g a Bourne shell</p>\n            <p>now save the file and make sure the file extension is .sh e.i save the file as e.g myScript.sh</p>\n            <h3 id=\"RunScript\">Running a script</h3>\n            <p>when the script is created we must make sure it can be executed on the machine we intend to use it on.</p>\n            <p>This is done by in a shell executing the following command:</p>\n            <p>sudo chmod 775 &lt;script_name&gt;.sh</p>\n            <p>One should note that the command sudo is not allways needed and that chmod 775 is overkill.</p>\n            <p>Now to execute the script simply type ./&lt;script_name&gt;.sh</p>\n            <p>The script created above will do nothing as it is empty but do not cry because:</p>\n            <p>Next we will go through the following things:</p>\n            <ul>\n                <a href=\"#CScript\"><li>❤ Creating a script</li></a>\n                <a href=\"#RunScript\"><li>❤ Running a script</li></a>\n                <a href=\"#ArgzPass\"><li>❤ Passing arguments</li></a>\n                <a href=\"#Exitscript\"><li>❤ Exiting a script</li></a>\n                <a href=\"#SimpleCmdzz\"><li>❤ Simple commands</li></a>\n                <a href=\"#Commentz\"><li>❤ Comments</li></a>\n                <a href=\"#Vbalz\"><li>❤ Variables</li></a>\n                <a href=\"#Argz\"><li>❤ Arguments</li></a>\n                <a href=\"#Funcz\"><li>❤ Functions</li></a>\n                <a href=\"#Cstatez\"><li>❤ Conditional statements</li></a>\n                <a href=\"#Loopz\"><li>❤ Loopy loops</li></a>\n            </ul>\n            <h3 id=\"ArgzPass\">Passing arguments</h3>\n            <p>When executing a command or a script one can give the command/script one or more presents</p>\n            <p>in different forms and shapes.</p>\n            <p>This is called passing arguments to the command/script.</p>\n            <p>Arguments are passed in the following way &lt;some_command&gt; &lt;argument_1&gt; &lt;...&gt; &lt;argument_n&gt;</p>\n            <p>As you can see you allready done this when you tested out the command cat &lt;some_file&gt;</p>\n            <p>here &lt;some_file&gt; is an argument to cat</p>\n            <h3 id=\"Exitscript\">Exiting a script</h3>\n            <p>To stop and exit a running command/script press crtl+c in your shell.</p>\n            <p>Note this will kill your script and not in a nice way.</p>\n            <h3 id=\"SimpleCmdzz\">Simple commands</h3>\n            <p>After the first row one can write any shell command one feels necessary e.g a small script might look as follow:</p>\n            <Sheet>{`\n#!/bin/sh\ncat file_1.txt >> loggy.log\n            `}</Sheet>\n            <p>When someone runs this script the script will cat (print) what is in file_1.txt and</p>\n            <p>append what is printed at the end of the file loggy.log</p>\n            <p>So one can just keep adding lines with differnet commands to the script file and when the script is executed</p>\n            <p>the commands will be executed in the order they are written</p>\n            <h3 id =\"Commentz\">Comments</h3>\n            <p>All lines beginning with a # (except the first one) is a comment and will not be executed.</p>\n            <h3 id=\"Vbalz\">Variables</h3>\n            <p>One can create what is called variables, these kind little helpers is simply names that have a given value.</p>\n            <p>E.g i want to use the value 0x420 many times but i do not want to write 0x420 all the time and</p>\n            <p>0x420 is not self explainatory but if I create a variable with a explainatory name e.g as SMOKERSDAY=0x420</p>\n            <p>one will directly know when you see $SMOKERSDAY that the value is 0x420.</p>\n            <p>Note that when creating the variable no $ dollar bill yall is used. but when \"calling\" the variable</p>\n            <p>It is full CREAM with $SMOKERSDAY in this way the shell can know if it is suppose to create or use a variable.</p>\n            <h3 id=\"Argz\">Arguments</h3>\n            <p>In order to take care of any arguments in your script you can access them via the \"variables\" $0 ... $n</p>\n            <p>Where $0 is a special one, this is the name of the command that is executed.</p>\n            <p>$1 and so forth are the arguments in order given to the script at execution.</p>\n            <h3 id=\"Funcz\">Functions</h3>\n            <p>Let us create som functions or commands within the script it self.</p>\n            <p>To create a function you will have to write the following in your script file:</p>\n            <Sheet>{`\nsome_function_name(){\n    #function contet goes here\n}\n            `}</Sheet>\n            <p>The above function just has a comment and does not for now do anything.</p>\n            <p>To use this function in your script just call its name like so:</p>\n            <Sheet>{`\nsome_function_name\n            `}</Sheet>\n            <p>to call it with arguments:</p>\n            <Sheet>{`\nsome_function_name <arg1> <arg2> <...> <argN>\n            `}</Sheet>\n            <p>Note that function work just as a script within the script it self as mentioned above.</p>\n            <p>That means that taking care of arguments work the same with full CREAM with $0 $1 and so forth</p>\n            <p>creating and calling variables and calling other functions/commands e.g cat ls some_other_function_created</p>\n            <p>Here is an example to gaze upon:</p>\n            <Sheet>{`\n#!/bin/sh\n#Name of this script is test.sh\nSMOKERSDAY=0x420\nfunny_func(){\n    echo $1\n}\ncall_on_me() {\n    funny_func $1\n}\ncall_on_me $SMOKERSDAY\n            `}</Sheet>\n            <p>What does ./test.sh do?</p>\n            <p>Well it prints 0x420 in the shell it is executed in.</p>\n            <h3 id=\"CStatez\">Conditional statements</h3>\n            <p>Lets lay down some conditions.</p>\n            <p>What is a conditional statement?</p>\n            <p>Well basically it is a question or a statement in the form of if.</p>\n            <p>If this is true do this else if this is true do that else do what ever.</p>\n            <p>For example:</p>\n            <Sheet>{`\nif [ 1 -gt 0 ]\nthen\n   echo YES\nfi\n            `}</Sheet>\n            <p>The above statement does the following:</p>\n            <ol>\n                <li>Checks if 1 is greater than (-gt) 0 then echo YES</li>\n            </ol>\n            <p>Another one:</p>\n            <Sheet>{`\nif [ $1 -gt 2 ]\nthen\n   echo YES\nelse if [ $1 -le 4 ]\n    echo \"Oooh YEAS\"\nfi\n            `}</Sheet>\n            <p>The example above does the following:</p>\n            <ol>\n                <li>Checks if the first argument ($1) is greater than (-gt) 2 if it is then echo YES if not:</li>\n                <li>Checks if the first argument ($1) is less than (-lt) 4 if it is then echo \"Oooh YEAS\" </li>\n            </ol>\n            <p>And in the spirit of DJ Khaled And another one:</p>\n            <Sheet>{`\nif [ $1 -gt 2 ]\nthen\n    echo YES\nelse if [ $1 -le 4 ]\n    echo \"Oooh YEAS\"\nelse\n    echo \"Hell YEAH!\"\nfi\n            `}</Sheet>\n             <p>The example above does the following:</p>\n            <ol>\n                <li>Checks if the first argument ($1) is greater than (-gt) 2 if it is then echo YES if not:</li>\n                <li>Checks if the first argument ($1) is less than (-lt) 4 if it is then echo Oooh YEAS </li>\n                <li>If non of the above echo Hell YEAH!</li>\n            </ol>\n            <h3 id=\"Loopz\">Loopy loops</h3>\n            <p>Lets gaze opon a special kind of conditional statement, that does the same thing a couple of times</p>\n            <p>or for infinity.</p>\n            <p>This is loops.</p>\n            <p>An loop is exactly what its name implies.</p>\n            <p>There are 2 kinds of loops one is called <b>for</b> and one is called <b>while</b>.</p>\n            <p>The <b>for</b> loop is a special kind of while and can look like this:</p>\n            <Sheet>{`\nfor i in 1 2 3 4 5\ndo\n    echo \"Looping ... number $i\"\ndone\n            `}</Sheet>\n            <p><b>i</b> can be replaced with any name you like but <b>i,j,k</b> is the most commonly used.</p>\n            <p><b>i</b> is called a loop index.</p>\n            <p><b>1 2 3 4 5</b> can be replaced with any other compatible set.</p>\n            <p>Beween <b>do</b> and <b>done</b> you specify what is to be done in a loop,</p>\n            <p>in the example above just echo some text.</p>\n            <p>Now lets look on <b>while</b> for a while...</p>\n            <p>A while loop can look like this:</p>\n            <Sheet>{`\nINPUT_STRING=hello\nwhile [ \"$INPUT_STRING\" != \"bye\" ]\ndo\n    echo \"Please type something in (bye to quit)\"\n    read INPUT_STRING\n    echo \"You typed: $INPUT_STRING\"\ndone\n            `}</Sheet>\n            <p>Do not fear!</p>\n            <p>I know it looks advanced and scary, but the main thing here is that the loop goes on until:</p>\n            <p>The condition [ \"$INPUT_STRING\" != \"bye\" ] is true, e.i $INPUT_STRING is equal to bye then</p>\n            <p>the loop quits looping.</p>\n            <p>So [ \"$INPUT_STRING\" != \"bye\" ] can be switched out to any condition e.g [ 1 ] which will make</p>\n            <p>the while loop go on for ever until crtl+c is pressed.</p>\n            <h2 id=\"CheatSheets\">Cheat sheets</h2>\n            <Sheet>{`\ncd <path>     change directory to <path>\ncat <file>    print content of <file>\nls            show which files are in the current directory\n>> <file>     append to\n>  <file>     write to\n            `}</Sheet>\n            <p>\n                Well thats all for now GLHF!\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            </p>\n            <StickyFooter>\n                <a href=\"#WhatIShell\"><b>What is shell?</b></a>\n                <a href=\"#Bourne\"><b>Bourne</b></a>\n                <a href=\"#Putty\"><b>Putty</b></a>\n                <a href=\"#ShellCmd\"><b>Shell commands</b></a>\n                <a href=\"#Scriptz\"><b>Scribes gonna script</b></a>\n                <a href=\"#GSTH\"><b>Good Stuff To Have (GSTH)</b></a>\n                <a href=\"#CheatSheets\"><b>Cheat sheets</b></a>\n            </StickyFooter>\n        </Content>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}